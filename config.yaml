---
experiments:
  metero_use: [
               '2m_temperature',
               'boundary_layer_height',
               'relative_humidity+950',
               'surface_pressure',
               'total_precipitation',
               'u_component_of_wind+950', 
               'v_component_of_wind+950'
               ]
  # if True, last two features should be (u,v) of wind, otherwise (speed [km/h], direc)
  use_wind_coordinates: True 
  # If True, timestamps are computed from start/end date, otherwise provided as first feature (format e.g.'2016-01-01 02:00:00')
  compute_time: False
  save_npy: True
  dataset_num: 1
  model: SplitGNN_3.2
  
node_gru_hidden_dim: 16
edge_gru_hidden_dim: 64
edge_mlp_hidden_dim: 16
transfer_lag: 12

# regularize R activations
r_reg_lambda: 0.000001 # set to 0 to disable
r_reg_norm: 1

# indices of the stations whose influence should be set to 0 during testing (for what-if-analysis)
disabled_stations:
  #- 0 # 1029A
  #- 1 # 1037A
  #- 2 # 1046A
  #- 3 # 1056A
  #- 4 # 1061A
  #- 5 # 1065A
  #- 6 # 1068A
  #- 7 # 1072A
  - 9 # daxing

force_self_focus: 1

train:
  batch_size: 32
  epochs: 30
  exp_repeat: 5
  hist_len: 1 # if 0, not using PM25 as inputs at all
  pred_len: 72
  weight_decay: 0.0005
  early_stop: 5
  lr: 0.0005
  step_lr:
    step_size: 3
    gamma: 0.5

device:
  cuda04:
    knowair_fp: ./data/KnowAir_DS2.npy
    city_fp: ./data/city_DS2.txt
    altitude_fp: ./data/altitude.npy
    results_dir: ./data/results
    torch_device: ~

data:
  metero_var:
    [
      '2m_temperature',
      'boundary_layer_height',
      'relative_humidity+950',
      'surface_pressure',
      'total_precipitation',
      'u_component_of_wind+950', 
      'v_component_of_wind+950'
     ]

dataset:
  data_start: [[2016, 1, 1, 8, 0], GMT] # 2016-01-01 08:00:00
  data_end: [[2020, 12, 31, 23, 0], GMT] # 2020-12-31 23:00:00

  1: 
    train_start: [[2018, 1, 1], GMT]
    train_end: [[2020, 9, 30], GMT]
    val_start: [[2020, 10, 1], GMT]
    val_end: [[2020, 11, 30], GMT]
    test_start: [[2020, 12, 1], GMT]
    test_end: [[2020, 12, 31], GMT]
